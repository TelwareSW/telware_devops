pipeline {
    agent any
    
    environment {
        GITHUB_CREDENTIALS_ID = 'PersonalAccessTokenUser'
        DOCKER_CREDENTIALS_ID = 'DockerHubPassword' 
        DOCKER_IMAGE = '299shehab299/telware-backend'
        TAG = 'latest_dev'
    }

    stages {


        stage('Checkout') {
            steps {
                script {
                    checkout scmGit(
                        branches: [[name: 'develop']],
                        extensions: [],
                        userRemoteConfigs: [[
                            credentialsId: "${GITHUB_CREDENTIALS_ID}",
                            url: 'https://github.com/TelwareSW/telware-backend.git'
                        ]]
                    )
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh 'sudo docker build -f dev.Dockerfile -t telware-backend-dev .'
            }
        }
        
        stage('Push To DockerHub'){
            steps {
                withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]){ 
                    sh 'echo $DOCKER_PASSWORD | sudo docker login -u $DOCKER_USERNAME --password-stdin'
                    sh 'sudo docker tag  telware-backend-dev ${DOCKER_IMAGE}:${TAG}'
                    sh 'sudo docker push ${DOCKER_IMAGE}:${TAG}'
                    sh 'sudo docker tag  telware-backend-dev ${DOCKER_IMAGE}:dev_${GIT_COMMIT}'
                    sh 'sudo docker push ${DOCKER_IMAGE}:dev_${GIT_COMMIT}'
                }
            }
        }

        stage('Clean'){
            steps{
                sh 'sudo docker rmi -f telware-backend-dev'
                sh 'sudo docker rmi -f ${DOCKER_IMAGE}:${TAG}'
                sh 'sudo docker rmi -f ${DOCKER_IMAGE}:dev_${GIT_COMMIT}'
            }
        }
        
        
    }
}
