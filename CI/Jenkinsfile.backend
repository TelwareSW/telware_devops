pipeline {
    agent any
    
    environment {
        GITHUB_CREDENTIALS_ID = 'github_token'
        DOCKER_CREDENTIALS_ID = 'DockerHubPassword' 
        DOCKER_IMAGE = 'telware/telware-backend'
        TAG = 'latest'
    }

    stages {

        stage('Checkout') {
            steps {
                script {
                    checkout scmGit(
                        branches: [[name: 'main']],
                        extensions: [],
                        userRemoteConfigs: [[
                            credentialsId: "${GITHUB_CREDENTIALS_ID}",
                            url: 'https://github.com/TelwareSW/telware-backend.git'
                        ]]
                    )
                }
            }
        }

        stage('Add env file') {
            steps {
                withCredentials([file(credentialsId: 'backend.env', variable: 'ENV_FILE_PATH')]) {
                    sh 'sudo rm -f .env'
                    sh 'sudo cat $ENV_FILE_PATH > .env'
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh 'sudo docker build -f dev.Dockerfile -t telware-backend-prod .'
            }
        }
        
        stage('Push To DockerHub'){
            steps {
                withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]){ 
                    sh 'echo $DOCKER_PASSWORD | sudo docker login -u $DOCKER_USERNAME --password-stdin'
                    sh 'sudo docker tag  telware-backend-prod ${DOCKER_IMAGE}:${TAG}'
                    sh 'sudo docker push ${DOCKER_IMAGE}:${TAG}'
                    sh 'sudo docker tag  telware-backend-prod ${DOCKER_IMAGE}:prod_${GIT_COMMIT}'
                    sh 'sudo docker push ${DOCKER_IMAGE}:prod_${GIT_COMMIT}'
                }
            }
        }

        stage('Clean'){
            steps{
                sh 'sudo docker rmi -f telware-backend-prod'
                sh 'sudo docker rmi -f ${DOCKER_IMAGE}:${TAG}'
                sh 'sudo docker rmi -f ${DOCKER_IMAGE}:prod_${GIT_COMMIT}'
            }
        }

        stage('Deploy'){
            steps{
                script{
                    checkout scmGit(
                        branches: [[name: 'main']],
                        extensions: [],
                        userRemoteConfigs: [[
                            credentialsId: "${GITHUB_CREDENTIALS_ID}",
                            url: 'https://github.com/TelwareSW/telware_devops.git'
                        ]]
                    )
                }

                dir('Docker') {
                    sh 'sudo docker compose -f prod.compose.yaml down'  
                    sh 'sudo docker compose -f prod.compose.yaml up -d'
                    
                }
            }
        }
        
}
}