services:

  mongo_dev:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    networks:
      - telware_dev_net
    volumes:
      - mongo-dev-data:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--quiet', '--eval', "db.adminCommand('ping')"]
      interval: 1m
      timeout: 5s
      retries: 5
      start_period: 45s

  backend_dev:
    image: telware/telware-backend:latest_dev
    ports:
      - '${PORT:-3001}:3000'
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - telware_dev_net

  redis_dev:
    image: redis/redis-stack
    restart: unless-stopped
    networks:
      - telware_dev_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20m
      timeout: 5s
      retries: 5
      start_period: 45s

  frontend_dev:
    image: telware/telware-frontend:latest_dev
    ports:
      - 8082:80
    restart: always
    depends_on:
      - backend
    

networks:
  telware_dev_net:

volumes:
  mongo-dev-data:
